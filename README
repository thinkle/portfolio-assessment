A project to manage google docs + portfolio assessment system.

What do we need...

Google sheets -> author our strands, etc.
Google classroom connect -> create portfolio / connect pieces (?)
Chrome extension -> connect w/ aspen
Database or Google Docs DB ->
         TABLES

         PER CLASS
         Skill -> Strand -> Descriptors -> # exemplars (display)
         Assignments -> Suggested skill (many-to-many)

         Data model is...

         Skill -> Strand -> Show-By-Date (?)
         Skill -> Strand -> Show-By-Date (?)
         Skill -> Strand -> Show-By-Date (?)
         
         1RP7wlpGOrrfUbdvBXKYvRygomATov6DTp1OocBEinqI


         PER STUDENT
         Skill -> Exemplar -> Reflection -> ID?

         PER TEACHER
         Student -> Work -> Skill -> Assessment


DESIGN
Let's (temporarily?) plan to build backend/frontend with a clean interface so they can be decoupled at a later date. For now, let's plan this...

Backend -> Google Apps Script based API like we use for aspen. Use this API to access classroom, sheets, etc. Note: this backend will necessitate asymmetrical data flow since we can only make get requests and get data back through jsonp. Given this, we can only push small amounts of data at a time though we can pull much larger amounts :)

Frontend -> Netlify-hosted modern single-page web-app. Might use React? Can (possibly) cache data to avoid making multiple calls to the backend for e.g. rubric descriptors etc.


*Backend methods*

get_table(class,id)
put_table(class,id)


get_classes(student)
get_teacher_classes(teacher) (x)
get_sheet (id) (x)
get_skills(class,assignment) (x)
get_portfolio_assignments(class,student)


update_skills -> create pretty google doc from our output.
update_portfolio -> create pretty portfolio from our output



*Frontend Views*

**Student**
Add assignment...
-> Pick skills...
-> Reflect
-> Submit to teacher

View portfolio
-> Show skills
-> Show "dashboard" (what's done, what are scores, etc.)

**Teacher**
-> View portfolios
   -> By student
   -> By skill
   -> By assignment
   -> By exemplar

-> Assessment to-do list
     
